main = "Histogram of WCTY Data",
hist(state.comb, breaks = 30,
xlab = "Test scores")
main = "Histogram of State Test Data",
xlab = "Test scores")
hist(internal.comb, breaks = 15,
main = "Histogram Internal Research Time Data",
xlab = "Time Spent")
par(mfrow=c(1,3))
hist(wcty.comb, breaks = 10,
main = "Histogram of WCTY Data",
xlab = "Test scores")
hist(state.comb, breaks = 30,
main = "Histogram of State Test Data",
xlab = "Test scores")
hist(internal.comb, breaks = 15,
main = "Histogram Internal Research Time Data",
xlab = "Time Spent")
wecometoyou <- read.delim("C:/Users/Frank/Desktop/STAT 3480/Exam II/wcty.txt", header=T)
data = wecometoyou;
test.deviance = function(trt1,trt2)
{
dev1 = trt1 - median(trt1);
dev2 <- trt2 - median(trt2)
all = c(dev1, dev2)
index = seq(along=all)
indexIntrt1 = combn(index, 3)
RMD = NULL
for(i in 1:dim(indexIntrt1)[2])
{
RMD[i] = mean(abs(all[indexIntrt1[, i]]))/mean(abs(all[-indexIntrt1[, i]]))
}
p_value = sum(RMD >= RMD[1])/length(RMD)
p_value
}
site = list(0,0,0,0)
for (i in 1:2)
{
regions[[i]] = data[[i]][!is.na(data[i])]
}
p.values.list = NULL
for (i in 1:2)
{
for(j in 1:2)
{
p.values.list = c(p.values.list, test.deviance(site[[i]],site[[j]]))
}
}
min(p.values.list)<=0.05
site
data
data = wecometoyou;
test.deviance = function(trt1,trt2)
{
dev1 = trt1 - median(trt1);
dev2 <- trt2 - median(trt2)
all = c(dev1, dev2)
index = seq(along=all)
indexIntrt1 = combn(index, 3)
RMD = NULL
for(i in 1:dim(indexIntrt1)[2])
{
RMD[i] = mean(abs(all[indexIntrt1[, i]]))/mean(abs(all[-indexIntrt1[, i]]))
}
p_value = sum(RMD >= RMD[1])/length(RMD)
p_value
}
RMD
test.deviance = function(trt1,trt2)
{
dev1 = trt1 - median(trt1);
dev2 <- trt2 - median(trt2)
all = c(dev1, dev2)
index = seq(along=all)
indexIntrt1 = combn(index, 3)
RMD = NULL
for(i in 1:dim(indexIntrt1)[2])
{
RMD[i] = mean(abs(all[indexIntrt1[, i]]))/mean(abs(all[-indexIntrt1[, i]]))
}
p_value = sum(RMD >= RMD[1])/length(RMD)
p_value
}
for (i in 1:2)
{
regions[[i]] = data[[i]][!is.na(data[i])]
}
p.values.list = NULL
for (i in 1:2)
{
for(j in 1:2)
{
p.values.list = c(p.values.list, test.deviance(site[[i]],site[[j]]))
}
}
min(p.values.list)<=0.05
min(p.values.list)
for (i in 1:2)
{
regions[[i]] = data[[i]][!is.na(data[i])]
}
p.values.list = NULL
for (i in 1:2)
{
for(j in 1:2)
{
p.values.list = c(p.values.list, test.deviance(site[[i]],site[[j]]))
}
}
library(combinat)
test.deviance = function(trt1,trt2)
{
dev1 = trt1 - median(trt1);
dev2 <- trt2 - median(trt2)
all = c(dev1, dev2)
index = seq(along=all)
indexIntrt1 = combn(index, 3)
RMD = NULL
for(i in 1:dim(indexIntrt1)[2])
{
RMD[i] = mean(abs(all[indexIntrt1[, i]]))/mean(abs(all[-indexIntrt1[, i]]))
}
p_value = sum(RMD >= RMD[1])/length(RMD)
p_value
}
wecometoyou[1]
wecometoyou[2]
tr1 = wecometoyou[1][!is.na(wecometoyou[1])
tr1
tr1 = wecometoyou[1][!is.na(wecometoyou[1]))
tr1
tr1 = wecometoyou[1][!is.na(wecometoyou[1])]
tr1
tr1 = wecometoyou[2][!is.na(wecometoyou[2])]
tr2
tr2 = wecometoyou[2][!is.na(wecometoyou[2])]
tr2
wecometoyou
test.deviance(tr1,tr2)
wecometoyou <- read.delim("C:/Users/Frank/Desktop/STAT 3480/Exam II/wcty.txt", header=T)
wecometoyou
wecometoyou[,1]
wecometoyou[6,2]
wecometoyou[1:6,2]
x = wecometoyou[,1]
y = wecometoyou[1:6,2]
devx = x - median(x)
devy = y - median(y)
m = length(x)
n = length(y)
rmd2 <- max(mean(abs(devx)) , mean(abs(devy)) )/
min(mean(abs(devx)) , mean(abs(devy))  )
rmd2
rmd.x = wecometoyou[,1]
rmd.y = wecometoyou[1:6,2]
dev.x <- rmd.x - median(rmd.x)
dev.y <- rmd.y - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.obs = rmd.1/rmd.2
rmd.comb <- c(rmd.x, rmd.y)
rmd.all <- rep(0, 100)
for(i in 1:100)
{
rmd.samp <- sample(rmd.comb)
dev.x <- rmd.samp[1:length(rmd.x)] - median(rmd.x)
dev.y <- rmd.samp[1:length(rmd.y)] - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.all[i] = rmd.1/rmd.2
}
sum(rmd.all >= rmd.obs)/100
trt1 = wecometoyou[,1]
trt2 = wecometoyou[1:6,2]
test.deviance = function(trt1,trt2){
dev1 = trt1 - median(trt1);dev2 <- trt2 - median(trt2)
all = c(dev1, dev2)
index = seq(along=all)
indexIntrt1 = combn(index, 5)
for(i in 1:dim(indexIntrt1)[2]){
RMD = NULL
RMD[i] = mean(abs(all[indexIntrt1[, i]]))/mean(abs(all[-indexIntrt1[, i]]))
}
p_value = sum(RMD >= RMD[1])/length(RMD)
p_value
}
p_value
test.deviance(trt1,trt2)
p_value
test.deviance(trt1,trt2)
test.deviance(1,2)
onsite = c(85.34, 84.12, 86.53, 85.52,
84.61, 86.94, 84.05, 86.29)
six = c(81.48, 81.26, 79.71, 81.46,
79.20, 81.65)
dev1 = onsite - median(onsite)
dev2 = six - median(six)
all = c(dev1, dev2)
index = seq(along=all)
indexIntrt1 = combn(index, 6)
RMD <- rep(NA, dim(indexIntrt1)[2])
for(i in 1:dim(indexIntrt1)[2]){
RMD[i] <- mean(abs(all[indexIntrt1[,
i]]))/mean(abs(all[-indexIntrt1[, i]]))
}
RMD
onsite = c(85.34, 84.12, 86.53, 85.52,
84.61, 86.94, 84.05, 86.29)
six = c(81.48, 81.26, 79.71, 81.46,
79.20, 81.65)
dev1 = onsite - median(onsite)
dev2 = six - median(six)
all = c(dev1, dev2)
index = seq(along=all)
indexIntrt1 = combn(index, 6)
RMD <- rep(NA, dim(indexIntrt1)[2])
for(i in 1:dim(indexIntrt1)[2]){
RMD[i] <- mean(abs(all[indexIntrt1[,
i]]))/mean(abs(all[-indexIntrt1[, i]]))
}
RMD
p_value <- sum(RMD <= RMD[1])/length(RMD)
p_value
library(combinat)
test.deviance = function(trt1,trt2){
dev1 = trt1 - median(trt1);dev2 <- trt2 - median(trt2)
all = c(dev1, dev2)
index = seq(along=all)
indexIntrt1 = combn(index, 5)
RMD = NULL
for(i in 1:dim(indexIntrt1)[2]){
RMD[i] = mean(abs(all[indexIntrt1[, i]]))/mean(abs(all[-indexIntrt1[, i]]))
}
p_value = sum(RMD >= RMD[1])/length(RMD)
p_value
}
test.deviance(onsite, six)
rmd.x = wecometoyou[,1]
rmd.y = wecometoyou[1:6,2]
dev.x <- rmd.x - median(rmd.x)
dev.y <- rmd.y - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.obs = rmd.1/rmd.2
rmd.comb <- c(rmd.x, rmd.y)
rmd.all <- rep(0, 100)
for(i in 1:100)
{
rmd.samp <- sample(rmd.comb)
dev.x <- rmd.samp[1:length(rmd.x)] - median(rmd.x)
dev.y <- rmd.samp[1:length(rmd.y)] - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.all[i] = rmd.1/rmd.2
}
sum(rmd.all >= rmd.obs)/100
rmd.x = wecometoyou[,1]
wecometoyou <- read.delim("C:/Users/Frank/Desktop/STAT 3480/Exam II/wcty.txt", header=T)
test.deviance = function(trt1,trt2)
{
dev1 = trt1 - median(trt1);
dev2 <- trt2 - median(trt2)
index = seq(along=all)
RMD = NULL
for(i in 1:dim(indexIntrt1)[2])
{
RMD[i] = mean(abs(all[indexIntrt1[, i]]))/mean(abs(all[-indexIntrt1[, i]]))
p_value = sum(RMD >= RMD[1])/length(RMD)
p_value
}
tr1 = wecometoyou[1][!is.na(wecometoyou[1])]
tr2 = wecometoyou[2][!is.na(wecometoyou[2])]
test.deviance(tr1,tr2)
# 0.6909091 is not significant
# Internal research data
indexIntrt1 = combn(index, 3)
}
all = c(dev1, dev2)
p_value
state.order <- state.comb
rmd.x <- state.order[12:23]
rmd.y <- state.order[1:11]
dev.x <- rmd.x - median(rmd.x)
dev.y <- rmd.y - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.x = wecometoyou[,1]
rmd.y = wecometoyou[1:6,2]
dev.x <- rmd.x - median(rmd.x)
dev.y <- rmd.y - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.obs = rmd.1/rmd.2
rmd.comb <- c(rmd.x, rmd.y)
rmd.all <- rep(0, 100)
for(i in 1:100)
{
rmd.samp <- sample(rmd.comb)
dev.x <- rmd.samp[1:length(rmd.x)] - median(rmd.x)
dev.y <- rmd.samp[1:length(rmd.y)] - median(rmd.y)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.all[i] = rmd.1/rmd.2
}
sum(rmd.all >= rmd.obs)/100
internal.comb <- c(internal[1:10,1], internal[1:10,2], internal[1:10,3], internal[1:10,4], internal[1:10,5])
summary(internal.comb)
summary(internal)
rmd.x <- internal.comb[12:23]
rmd.y <- internal.comb[1:11]
dev.x <- rmd.x - median(rmd.x)
internal <- read.table('Internal+Research+-+WCtY+Time+Data.txt', header = T)
internal.comb <- c(internal[1:10,1], internal[1:10,2], internal[1:10,3], internal[1:10,4], internal[1:10,5])
summary(internal.comb)
summary(internal)
rmd.x <- internal.comb[12:23]
rmd.y <- internal.comb[1:11]
dev.x <- rmd.x - median(rmd.x)
dev.y <- rmd.y - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.obs = rmd.1/rmd.2
rmd.comb <- c(rmd.x, rmd.y)
rmd.all <- rep(0, 100)
for(i in 1:100)
{
rmd.samp <- sample(rmd.comb)
dev.x <- rmd.samp[1:length(rmd.x)] - median(rmd.x)
dev.y <- rmd.samp[1:length(rmd.y)] - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.all[i] = rmd.1/rmd.2
}
sum(rmd.all >= rmd.obs)/100
state.order <- state.comb
rmd.x <- state.order[12:23]
rmd.y <- state.order[1:11]
dev.x <- rmd.x - median(rmd.x)
dev.y <- rmd.y - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.obs = rmd.1/rmd.2
rmd.comb <- c(rmd.x, rmd.y)
rmd.all <- rep(0, 100)
for(i in 1:100)
{
rmd.samp <- sample(rmd.comb)
dev.x <- rmd.samp[1:length(rmd.x)] - median(rmd.x)
dev.y <- rmd.samp[1:length(rmd.y)] - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.all[i] = rmd.1/rmd.2
}
sum(rmd.all >= rmd.obs)/100
rmd.x = wecometoyou[,1]
rmd.y = wecometoyou[1:6,2]
dev.x <- rmd.x - median(rmd.x)
dev.y <- rmd.y - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.obs = rmd.1/rmd.2
rmd.comb <- c(rmd.x, rmd.y)
rmd.all <- rep(0, 100)
for(i in 1:100)
{
rmd.samp <- sample(rmd.comb)
dev.x <- rmd.samp[1:length(rmd.x)] - median(rmd.x)
dev.y <- rmd.samp[1:length(rmd.y)] - median(rmd.y)
rmd.1 <- sum(abs(dev.x))/length(rmd.x)
rmd.2 <- sum(abs(dev.y))/length(rmd.y)
rmd.all[i] = rmd.1/rmd.2
}
sum(rmd.all >= rmd.obs)/100
# WCTY data
x = wecometoyou[,1]
y = wecometoyou[1:6,2]
wilcox.test(x, y, alternative ="greater")
kruskal.test(internal)
state.order <- read.csv("state_ordered.csv", header=T)
state.order.r1 <- state.order[,1]
names(state.order.r1) <- state.order[,2]
state.rank <- rank(state.order.r1)
state.rank
kruskal.test(internal)
meandiffs <- abs(outer(trtmeans, trtmeans,"-"))
grp1 <- wecometoyou[,1]
grp2 <- wecometoyou[1:6,2]
x = c(grp1, grp2)
grps = rep(1:4, each=6)
##analyze the data
### mean of each trt group
trtmeans <- getmeans(x, grps)
### pairwise differences of means
meandiffs <- abs(outer(trtmeans, trtmeans,"-"))
meandiffs
nn <- table(factor(grps))  #size of each treatment group
source("http://www4.stat.ncsu.edu/~lu/ST505/Rcode/functions-Ch3.R")
rmd.x = wecometoyou[,1]
rmd.y = wecometoyou[1:6,2]
grp1 <- wecometoyou[,1]
grp2 <- wecometoyou[1:6,2]
## construct the combined data vector and the group variable indicating the group index of each observation
x = c(grp1, grp2)
grps = rep(1:4, each=6)
##analyze the data
### mean of each trt group
trtmeans <- getmeans(x, grps)
state <- read.delim("C:/Users/Frank/Desktop/STAT 3480/Exam II/State+Test+Data.txt", header=T)
state
ourstate = state[1:11,1]
state1
ourstate = state[1:11,1]
state1 = state[1:12,1]
state2 = state[1:19,2]
state3 = state[1:11,3]
state4 = state[1:12,4]
state5 = state[1:11,5]
x = c(outstate, state1, state2, state3, state4, state5)
rep(1:4, each=6)
grps = c(rep(1,length(outstate)), rep(2,length(state1)), rep(3,length(state2)), rep(4,length(state3))
,rep(5,length(state4)), rep(6,length(state5)))
ourstate = state[1:11,1]
grps = c(rep(1,length(ourstate)), rep(2,length(state1)), rep(3,length(state2)), rep(4,length(state3))
,rep(5,length(state4)), rep(6,length(state5)))
grps
x = c(outstate, state1, state2, state3, state4, state5)
trtmeans <- getmeans(x, grps)
meandiffs <- abs(outer(trtmeans, trtmeans,"-"))
meandiffs
state
choose(5,2)
state[[1]]
state
mediantst(state[[1]][!is.na(state[1])],state[[2]][!is.na(state[2])])
mediantst <- function(x, y, nreps=100)
{
d.obs <- abs(median(x) - median(y))
nx <- length(x)
ny <- length(y)
tail.prob <- 0
for(i in 1:nreps)
{
xy <- sample(c(x,y)) # permute combined list
x <- xy[1:nx] # first nx are assigned to x
y <- xy[seq(nx+1,nx+ny)] # next ny to y
d.sim <- abs(median(x) - median(y))
if(d.sim >= d.obs) # increment tail prob
tail.prob <- tail.prob + 1
}
tail.prob <- tail.prob / nreps
return(tail.prob)
}
mediantst(state[[1]][!is.na(state[1])],state[[2]][!is.na(state[2])])
mediantst(state[[1]][!is.na(state[1])],state[[2]][!is.na(state[2])])
mediantst(state[[1]][!is.na(state[1])],state[[3]][!is.na(state[3])])
mediantst(state[[1]][!is.na(state[1])],state[[4]][!is.na(state[4])])
mediantst(state[[2]][!is.na(state[2])],state[[3]][!is.na(state[3])])
mediantst(state[[2]][!is.na(state[2])],state[[4]][!is.na(state[4])])
mediantst(state[[1]][!is.na(state[1])],state[[5]][!is.na(state[5])])
mediantst(state[[2]][!is.na(state[2])],state[[4]][!is.na(state[4])])
mediantst(state[[1]][!is.na(state[1])],state[[6]][!is.na(state[6])])
mediantst(state[[1]][!is.na(state[1])],state[[5]][!is.na(state[5])])
mediantst(state[[1]][!is.na(state[1])],state[[2]][!is.na(state[2])])
mediantst(state[[1]][!is.na(state[1])],state[[3]][!is.na(state[3])])
mediantst(state[[1]][!is.na(state[1])],state[[4]][!is.na(state[4])])
mediantst(state[[1]][!is.na(state[1])],state[[5]][!is.na(state[5])])
mediantst(state[[1]][!is.na(state[1])],state[[6]][!is.na(state[6])])
mediantst(state[[1]][!is.na(state[1])],state[[2]][!is.na(state[2])])
mediantst(state[[1]][!is.na(state[1])],state[[3]][!is.na(state[3])])
mediantst(state[[1]][!is.na(state[1])],state[[4]][!is.na(state[4])])
mediantst(state[[1]][!is.na(state[1])],state[[5]][!is.na(state[5])])
mediantst(state[[1]][!is.na(state[1])],state[[6]][!is.na(state[6])])
mediantst(state[[2]][!is.na(state[2])],state[[3]][!is.na(state[3])])
mediantst(state[[1]][!is.na(state[1])],state[[2]][!is.na(state[2])])
mediantst(state[[1]][!is.na(state[1])],state[[3]][!is.na(state[3])])
mediantst(state[[1]][!is.na(state[1])],state[[4]][!is.na(state[4])])
mediantst(state[[1]][!is.na(state[1])],state[[5]][!is.na(state[5])])
mediantst(state[[1]][!is.na(state[1])],state[[6]][!is.na(state[6])])
mediantst(state[[2]][!is.na(state[2])],state[[3]][!is.na(state[3])])
mediantst(state[[2]][!is.na(state[3])],state[[4]][!is.na(state[4])])
mediantst(state[[2]][!is.na(state[2])],state[[5]][!is.na(state[5])])
mediantst(state[[2]][!is.na(state[2])],state[[6]][!is.na(state[6])])
mediantst(state[[2]][!is.na(state[2])],state[[3]][!is.na(state[3])])
mediantst(state[[2]][!is.na(state[3])],state[[4]][!is.na(state[4])])
mediantst(state[[2]][!is.na(state[2])],state[[5]][!is.na(state[5])])
mediantst(state[[2]][!is.na(state[2])],state[[6]][!is.na(state[6])])
mediantst(state[[2]][!is.na(state[2])],state[[3]][!is.na(state[3])])
mediantst(state[[2]][!is.na(state[3])],state[[4]][!is.na(state[4])])
mediantst(state[[2]][!is.na(state[2])],state[[3]][!is.na(state[3])])
mediantst(state[[2]][!is.na(state[2])],state[[3]][!is.na(state[3])])
mediantst(state[[2]][!is.na(state[2])],state[[3]][!is.na(state[3])])
mediantst(state[[2]][!is.na(state[2])],state[[3]][!is.na(state[3])])
mediantst(state[[2]][!is.na(state[3])],state[[4]][!is.na(state[4])])
mediantst(state[[2]][!is.na(state[2])],state[[5]][!is.na(state[5])])
mediantst(state[[2]][!is.na(state[2])],state[[6]][!is.na(state[6])])
mediantst(state[[3]][!is.na(state[3])],state[[4]][!is.na(state[4])])
mediantst(state[[3]][!is.na(state[3])],state[[5]][!is.na(state[5])])
mediantst(state[[3]][!is.na(state[3])],state[[6]][!is.na(state[6])])
6
mediantst(state[[5]][!is.na(state[5])],state[[6]][!is.na(state[6])])
mediantst(state[[4]][!is.na(state[4])],state[[3]][!is.na(state[3])])
mediantst(state[[4]][!is.na(state[4])],state[[4]][!is.na(state[4])])
mediantst(state[[4]][!is.na(state[4])],state[[4]][!is.na(state[4])])
mediantst(state[[4]][!is.na(state[4])],state[[5]][!is.na(state[5])])
mediantst(state[[4]][!is.na(state[4])],state[[6]][!is.na(state[6])])
kruskal.test(internal)
#     Kruskal-Wallis rank sum test
#
# data:  internal
# Kruskal-Wallis chi-squared = 7.5586, df = 4, p-value = 0.1092
kruskal.test(state)
kruskal.test(internal)
