slowest <- with(nym.2002, min(time))
slow.hour <- round(slowest/60, 0)
slow.min <- slowest - (slow.hour*60)
answer_slowest <- c(slow.hour, "hours", slow.min, "minutes")
answer_slowest
library(UsingR)
data(nym.2002)
with(nym.2002, length(time))
b.
# fastest <- with(nym.2002, min(time))
# fast.hour <- round(fastest/60, 0)
# fast.min <- fastest - (fast.hour*60)
#
# answer_fastest <- c(fast.hour, " hours", fast.min, " minutes")
# answer_fastest;
# [1] "2"               " hours"          "27.333333333333" " minutes"
c.
slowest <- with(nym.2002, min(time))
slow.hour <- round(slowest/60, 0)
slow.min <- slowest - (slow.hour*60)
answer_slowest <- c(slow.hour, "hours", slow.min, "minutes")
answer_slowest
library(UsingR)
data(nym.2002)
with(nym.2002, length(time))
b.
# fastest <- with(nym.2002, min(time))
# fast.hour <- round(fastest/60, 0)
# fast.min <- fastest - (fast.hour*60)
#
# answer_fastest <- c(fast.hour, " hours", fast.min, " minutes")
# answer_fastest;
# [1] "2"               " hours"          "27.333333333333" " minutes"
c.
slowest <- with(nym.2002, max(time))
slow.hour <- round(slowest/60, 0)
slow.min <- slowest - (slow.hour*60)
answer_slowest <- c(slow.hour, "hours", slow.min, "minutes")
answer_slowest
data(pop.VA)
data(pop.VA)
ex <- pop.VA[1]
ex
setwd("C:/Users/Frank/Desktop/STAT 5390")
data(pop.VA)
ex <- pop.VA[1]
ex
data(pop.VA.txt)
ex <- pop.VA[1]
ex
data(pop.VA)
ex <- pop.VA[1]
ex
data(pop.VA)
ex <- pop.VA[1]
ex
attach(boston.marathon)
attach(pop_VA)
pop_MD <- read.table("C:/Users/Frank/Desktop/STAT 5390/pop_MD.txt", quote="\"", comment.char="")
View(pop_MD)
pop_VA <- read.table("C:/Users/Frank/Desktop/STAT 5390/pop_VA.txt", quote="\"", comment.char="")
View(pop_VA)
read.table(pop_MD, header = FALSE)
x
read.table('pop_MD', header = FALSE)
x <- 'pop_MD'
x
read.table('pop_MD', header = FALSE)
read.table('pop_MD', header = FALSE)
attach('pop_MD')
dec = ".", fill = TRUE)
read.csv('POP_VA_2', header = F, sep = ",")
read.csv('POP_VA_2', header = F, sep = ",")
attach('POP_VA_2')
setwd(C:\Users\Frank\Desktop\STAT 5390)
read.csv('POP_VA_2', header = F, sep = ",")
attach('POP_VA_2')
read.csv('pop_VA_2', header = F, sep = ",")
setwd(C:\Users\Frank\Desktop\STAT 5390)
read.csv('pop_VA_2')
attach('pop_VA_2')
setwd(C:\Users\Frank\Desktop\STAT 5390)
read.csv('pop_VA_2')
attach('pop_VA_2')
setwd(C:\Users\Frank\Desktop\STAT 5390)
mydata <- read.csv('pop_VA_2')
cd
getwd()
mydata <- read.table("pop_VA", header=F)
mydata <- read.table(pop_VA, header=F)
pop_VA_2 <- read.delim("C:/Users/Frank/Desktop/STAT 5390/pop_VA_2.csv", header=FALSE)
View(pop_VA_2)
mydata <- read.table(pop_VA_2, header=F)
mydata <- read.table('pop_VA_2', header=F)
mydata <- read.table('pop_VA', header=F)
mydata <- read.csv('pop_VA_2', header=F)
mydata <- read.csv('C:\Users\Frank\Desktop\STAT 5390\pop_VA', header=F)
mydata <- read.csv('C:\Users\Frank\Desktop\STAT 5390\pop_VA', header=F)
mydata <- read.csv(C:\Users\Frank\Desktop\STAT 5390\pop_VA, header=F)
mydata <- read.table(C:\Users\Frank\Desktop\STAT 5390\pop_VA, header=F)
x <- c(1,2,3,7,10)
y <- factor(x)
relevel(x)
x <- lm(trees$Girth~trees$Height+trees$Volume)
x <- lm(trees$Girth~trees$Height+trees$Volume)
trees$Height <- relvel(trees$Height)
trees$Height <- relevel(trees$Height)
x <- glm(trees$Girth~trees$Height+trees$Volume)
x
help(glm)
x <- glm(trees$Girth~trees$Height+trees$Volume)
y <- lm(trees$Girth~trees$Height+trees$Volume)
x
y
x <- glm(trees$Girth~trees$Height+trees$Volume, family=binomial, data=pima)
library(MASS)
data(pima, package="faraway")
b <- factor(pima$test)
library(MASS)
data(pima)
data(Pima)
data(Pima.tr)
x<- data(Pima.tr)
b <- factor(x$test)
Pima.tr
summary(glm(lot2 ~ log(u), data = clotting, family = Gamma))
clotting <- data.frame(
u = c(5,10,15,20,30,40,60,80,100),
lot1 = c(118,58,42,35,27,25,21,19,18),
lot2 = c(69,35,26,21,18,16,13,12,12))
summary(glm(lot1 ~ log(u), data = clotting, family = Gamma))
summary(glm(lot2 ~ log(u), data = clotting, family = Gamma))
clotting <- data.frame(
u = c(5,10,15,20,30,40,60,80,100),
lot1 = c(118,58,42,35,27,25,21,19,18),
lot2 = c(69,35,26,21,18,16,13,12,12))
summary(glm(lot1 ~ log(u), data = clotting, family = Gamma))
summary(glm(lot2 ~ log(u), data = clotting, family = Gamma))
clotting <- data.frame(
u = c(5,10,15,20,30,40,60,80,100),
lot1 = c(118,58,42,35,27,25,21,19,18),
lot2 = c(69,35,26,21,18,16,13,12,12))
summary(glm(lot1 ~ log(u), data = clotting, family = Gamma))
summary(glm(lot2 ~ log(u), data = clotting, family = Gamma))
library(car)
library(mlogit)
chatData
install.packages(mlogit)
install.packages('mlogit')
library(mlogit)
chatData
??mlogit.data
data("TravelMode", package = "AER")
TM <- mlogit.data(TravelMode, choice = "choice", shape = "long",
alt.levels = c("air", "train", "bus", "car"))
data("Car", package = "mlogit")
Car <- mlogit.data(Car, varying = 5:70, shape = "wide", sep = "",
choice = "choice", alt.levels = 1:6)
Car
head(Car)
Car
Car
data("Car", package = "mlogit")
Car <- mlogit.data(Car, varying = 5:70, shape = "wide", sep = "",
choice = "choice", alt.levels = 1:6)
head(Car)
Car
mlogit(Car)
help(mlogit)
head(Car)
mlogit(Choice~price, Car)
mlogit(Car$Choice~Car$price, Car)
mlogit(Car)
mlogit(Car, choice="price")
data("Fishing", package = "mlogit")
Fish <- mlogit.data(Fishing, varying = c(2:9), shape = "wide", choice = "mode")
Fish
head(Fish, 3)
data("Fishing", package = "mlogit")
Fish <- mlogit.data(Fishing, varying = c(2:9), shape = "wide", choice = "mode")
head(Fish, 3)
Fishing
head(Fishing
head(Fishing)
head(Fishing)
help(confint
help(confint)
help(confint)
confint(trees)
x <- lm(trees)
confint(x)
help(aov)
y <0 (x+eps)^(-1/1.5)
y <- (x+eps)^(-1/1.5)
WWWusage
islands
stackloss
x <- stackloss
aov(x)
aov(x$Air.Flow~x$Water.Temp+x$Acid.Conc)
x <- stackloss
aov(x$Air.Flow~x$Water.Temp+x$Acid.Conc)
help(TukeyHSD)
TukeyHSD(x)
x <- stackloss
y <- aov(x$Air.Flow~x$Water.Temp+x$Acid.Conc)
TukeyHSD(y)
TukeyHSD(x$Air.Flow~x$Water.Temp+x$Acid.Conc)
TukeyHSD(stackloss)
y <- aov(x$Air.Flow~x$Water.Temp+x$Acid.Conc)
TukeyHSD(y)
summary(fm1 <- aov(breaks ~ wool + tension, data = warpbreaks))
TukeyHSD(fm1, "tension", ordered = TRUE)
plot(TukeyHSD(fm1, "tension"))
nhtemp
nhtempts<-ts(nhtemp, start = 1912, freq = 1)
nhtempts
nhtemp
nhtempts<-ts(nhtemp, start = 1912, freq = 1)
nhtempts
help(scan)
Airlines
airmiles
x <- ts(airmiles, start=1937, freq=12)
plot.ts(x)
x <- ts(airmiles, start=1937, freq=1)
plot.ts(x)
help(diff)
diff(x)
x <- ts(airmiles, start=1937, freq=1)
diff(x)
help(rollmean)
rollmean(x)
rollmean(x, 3)
rollmean()
library(zoo)
x <- ts(airmiles, start=1937, freq=1)
rollmean(x, 3)
y <- rollmean(x, 3)
plot(y)
plot.ts(y)
help(filter)
filter(x)
plot.ts(y, rep(1,3))
x <- 1:100
filter(x, rep(1, 3))
source('~/.active-rstudio-document', echo=TRUE)
rep(1,3)
help(filter)
help(lowess)
plot(nottem_comps$trend)
lowess(x)
x <- ts(airmiles, start=1937, freq=1)
lowess(x)
plot(y)
x <- ts(airmiles, start=1937, freq=1)
x <- ts(airmiles, start=1937, freq=1)
plot(x)
plot(y)
par(mfrow=c(1,2))
plot(x)
plot(y)
library(zoo)
x <- ts(airmiles, start=1937, freq=1)
y <- lowess(x)
par(mfrow=c(1,2))
plot(x)
plot(y)
library(zoo)
x <- ts(airmiles, start=1937, freq=1)
y <- lowess(x)
par(mfrow=c(1,2))
plot(x)
plot(y)
library(zoo)
x <- ts(airmiles, start=1937, freq=1)
y <- lowess(x)
par(mfrow=c(1,2))
plot(x)
plot(y, type='l')
help(lowess)
library(zoo)
x <- ts(airmiles, start=1937, freq=1)
y <- loess(x)
par(mfrow=c(1,2))
plot(x)
plot(y, type='l')
library(zoo)
x <- ts(airmiles, start=1937, freq=1)
y <- loess.smooth(x)
par(mfrow=c(1,2))
plot(x)
plot(y, type='l')
help(loess.smooth)
y
library(zoo)
x <- ts(airmiles, start=1937, freq=1)
y <- loess.smooth(x)
y
library(zoo)
x <- ts(airmiles, start=1937, freq=1)
y <- loess.smooth(x)
y
help(smooth.spline
help(smooth.spline)
help(smooth.spline)
library(zoo)
x <- ts(airmiles, start=1937, freq=1)
y <- smooth.spline(x)
par(mfrow=c(1,2))
plot(x)
plot(y, type='l')
y
library(zoo)
x <- ts(airmiles, start=1937, freq=1)
y <- smooth.spline(x)
y
y <- decompose(x)
y
library(zoo)
x <- ts(airmiles, start=1937, freq=1)
y <- decompose(x)
y
library(zoo)
x <- ts(airmiles, start=1937, freq=3)
y <- decompose(x)
y
attributes(y)
library(zoo)
x <- ts(airmiles, start=1937, freq=3)
y <- decompose(x)
attributes(y)
help(acf
help(acf)
help(acf)
ldeaths
acf(ldeathsts, main = "Autocorrelation")
ldeaths
ldeathsts<-ts(ldeaths, start = 1974, freq =12)
acf(ldeathsts, main = "Autocorrelation")
ldeaths
ldeathsts<-ts(ldeaths, start = 1974, freq =12)
acf(ldeathsts, main = "Autocorrelation")
help(spectrum)
spectrum(ldeaths, col = "red")
ldeaths
spectrum(ldeaths, col = "red")
help(spectrum)
Demystifying R Part 2
========================================================
install.packages("stringi")
library(knitr)
summary(mtcars)
str(mtcars)
mtcars[mpg > 23]
mtcars$mpg
subset(mtcars, mpg > 23 )
efficient <- subset(mtcars, mpg > 23 )
length(efficient)
subset(mtcars, mpg > 30 & hp > 100)
head(mtcars)
subset(mtcars, qsec <= 16.9)
subset(mtcars, wt < 2)
lightCars <- subset(mtcars, wt < 2)
mtcars$year <- 1974
View(mtcars)
mtcars <- subset(mtcars, select = -year)
View(mtcars)
mtcars$year <- c(1973, 1974)
View(mtcars)
mtcars <- subset(mtcars, select = -year)
View(mtcars)
mtcars$wt
cond <- mtcars$wt < 3
cond
mtcars$weight_class <- ifelse(cond, 'light', 'average')
mtcars$weight_class
cond <- mtcars$wt > 3.5
mtcars$weight_class <- ifelse(cond, 'heavy', mtcars$weight_class)
mtcars$weight_class
rm(cond)
rm(efficient)
install.packages('knitr', dependencies = T)
install.packages("knitr", dependencies = T)
library(knitr)
subset(mtcars, mpg >= 30 | hp < 60)
data.1 <- c(79, 74, 88, 80, 80, 66, 65, 86, 84, 80, 78, 72, 71, 74, 86, 96, 77, 81, 76, 80,
76, 75, 78, 87, 87, 74, 85, 84, 76, 77, 76, 74, 85, 74, 76, 74, 81, 76)
length(data.1)
data.1 <- c(79, 74, 88, 80, 80, 66, 65, 86, 84, 80, 78, 72, 71, 74, 86, 96, 77, 81, 76, 80,
76, 75, 78, 87, 87, 74, 85, 84, 76, 77, 76, 74, 85, 74, 76, 77, 76, 74, 81, 76)
median(data.1)
[1] 77
b <- data.1 > 70
b
b <- subset(data.1, data.1 > 70)
b
length(b)
b <- length(subset(data.1, data.1 > 70))
b
z_b <- (38-20)/sqrt(.25*40)
z_b
normsdist
help(normdist)
??normdist
p_val = pnorm(z_b)
p_val
p_val = pnorm(-z_b)
p_val
z.test(data.1)
ztest(data.1)
data.3 <- c(21.3, 28.8, 17.6, 23.0, 27.2, 28.5, 32.8, 28.2, 25.9, 22.5, 27.2)
length(data.3)
data.3 <- c(21.3, 28.8, 17.6, 23.0, 27.2, 28.5, 32.8, 28.2, 25.9, 22.5,
27.2, 33.1, 28.7, 24.8, 24.3, 27.1, 30.6, 26.8, 18.9, 36.3,
28.0, 17.9, 25.0, 27.5, 27.7, 32.1, 28.0, 30.9, 20.0, 20.2,
33.5, 26.4, 30.9, 33.2)
length(data.3)
sqrt(.25*34)
(sqrt(.25*34)*-1.96)+(.5*34)
(sqrt(.25*34)*-1.96)+(.5*34))
(sqrt(.25*34)*-1.96)+(.5*34)
(sqrt(.25*34)*1.96)+(.5*34)+1
sort(data.3)
data.3.sorted <- sort(data.3)
data.3.sorted(11)
data.3.sorted(24)
data.3.sorted <- sort(data.3)
data.3.sorted(11)
data.3.sorted <- sort(data.3)
data.3.sorted(11)
data.3.sorted[11]
data.3.sorted[24]
median(data.3)
2*1:5
[1]  2  4  6  8 10
(2*1):5
seq(1,19, by=2)
x <- seq(1,19, by=2)
y = c(-1, 2, -3, 4, -5)
y
abs(y)
z = abs(y)
z
help(chisq)
??(chisq)
??chisq
help(qf)
help(qchisq)
qchisq(.95, 10)
qchisq(.95, 10, lower.tail=T)
qchisq(.95, 10, lower.tail=F)
x = rnorm(1000)
summary(x)
mean(rnorm)
mean(x)
mean(x)
var(x)
hist(x)
hist(x, main="1000 Random number histogram")
hist(x, main="Histogram of 1000 Random Numbers")
hist(x, main="Histogram of 1000 Random Numbers", xlab="data")
x = rnorm(1000)
summary(x)
rng(1234)
set.seed(1234)
x = rnorm(1000)
summary(x)
x = rnorm(1000)
summary(x)
x = rnorm(1000)
summary(x)
set.seed(1234)
x = rnorm(1000)
summary(x)
set.seed(1234)
x = rnorm(1000)
summary(x)
set.seed(1234)
x = rnorm(1000)
summary(x)
mean(x)
var(x)
hist(x, main="Histogram of 1000 Random Numbers", xlab="data")
set.seed(1234)
x = rnorm(1000)
summary(x)
#     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3.39600 -0.67330 -0.03979 -0.02660  0.61580  3.19600
mean(x)
# Mean: [1] -0.0265972
var(x)
# Variance: [1] 0.9946825
hist(x, main="Histogram of 1000 Random Numbers", xlab="data")
setwd("C:/Users/Frank/Desktop/STAT 5170/Assignment 1")
plot(gas, xlab="time", ylab="price",
main="Monthly Heating Oil Prices Jan 1973 to Dec 1987")
gas <- scan("gas.dat")
plot(gas, xlab="time", ylab="price",
main="Monthly Heating Oil Prices Jan 1973 to Dec 1987")
plot.ts(gas, xlab="time", ylab="price",
main="Monthly Heating Oil Prices Jan 1973 to Dec 1987")
set.seed(1234)
x = rnorm(1000)
summary(x)
#     Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# -3.39600 -0.67330 -0.03979 -0.02660  0.61580  3.19600
mean(x)
# Mean: [1] -0.0265972
var(x)
# Variance: [1] 0.9946825
hist(x, main="Histogram of 1000 Random Numbers", xlab="data")
