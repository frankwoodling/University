### randomly "shuffle" the y data between the x groups
ySHUFFLE = sample(y)
### compute chi-square stat for the shuffled data
TableSHUFFLE = table(x,ySHUFFLE)
teststat[i] = chisq.test(TableSHUFFLE)$statistic
}
### calculate the approximate p-value
teststat
mean(teststat >+ teststat.obs)
mean(teststat >= teststat.obs)
teststat.obs = chisq.test(Table)$statistic
teststat.obs
Row1 = c(1,2,0); Row2 = c(1,0,1)
Table = rbind(Row1,Row2)
teststat.obs = chisq.test(Table)$statistic
teststat.obs
### create the prefernce data and the gender data
preference = c( rep("B",52), rep("F",57), rep("O",23))
gender = c( rep("boy",74), rep("girl",58) )
table(preference); table(gender)
y = preference; x = gender
teststat = rep(NA, 1000)
for(i in 1:1000) {
### randomly "shuffle" the y data between the x groups
ySHUFFLE = sample(y)
### compute chi-square stat for the shuffled data
TableSHUFFLE = table(x,ySHUFFLE)
teststat[i] = chisq.test(TableSHUFFLE)$statistic
}
### calculate the approximate p-value
mean(teststat >= teststat.obs)
mean(teststat >= teststat.obs)
Row1 = c(1,2,0); Row2 = c(1,0,1)
Table = rbind(Row1,Row2)
teststat.obs = chisq.test(Table)$statistic
teststat.obs
### create the prefernce data and the gender data
preference = c( rep("B",52), rep("F",57), rep("O",23))
gender = c( rep("boy",74), rep("girl",58) )
table(preference); table(gender)
y = preference; x = gender
teststat = rep(NA, 1000)
for(i in 1:1000) {
### randomly "shuffle" the y data between the x groups
ySHUFFLE = sample(y)
### compute chi-square stat for the shuffled data
TableSHUFFLE = table(x,ySHUFFLE)
teststat[i] = chisq.test(TableSHUFFLE)$statistic
}
### calculate the approximate p-value
mean(teststat >= teststat.obs)
Row1 = c(22,40,12); Row2 = c(30,17,11)
Table = rbind(Row1,Row2)
teststat.obs = chisq.test(Table)$statistic
teststat.obs
preference = c( rep("B",52), rep("F",57), rep("O",23))
gender = c( rep("boy",74), rep("girl",58) )
y = preference; x = gender
for(i in 1:1000) {
### randomly "shuffle" the y data between the x groups
### compute chi-square stat for the shuffled data
ySHUFFLE = sample(y)
table(preference); table(gender)
TableSHUFFLE = table(x,ySHUFFLE)
teststat = rep(NA, 1000)
}
### create the prefernce data and the gender data
teststat[i] = chisq.test(TableSHUFFLE)$statistic
### calculate the approximate p-value
mean(teststat >= teststat.obs)
Row1 = c(22,40,12); Row2 = c(30,17,11)
Table = rbind(Row1,Row2)
teststat.obs = chisq.test(Table)$statistic
teststat.obs
### create the prefernce data and the gender data
preference = c( rep("B",52), rep("F",57), rep("O",23))
gender = c( rep("boy",74), rep("girl",58) )
table(preference); table(gender)
y = preference; x = gender
teststat = rep(NA, 1000)
for(i in 1:1000) {
### randomly "shuffle" the y data between the x groups
ySHUFFLE = sample(y)
### compute chi-square stat for the shuffled data
TableSHUFFLE = table(x,ySHUFFLE)
teststat[i] = chisq.test(TableSHUFFLE)$statistic
}
### calculate the approximate p-value
mean(teststat >= teststat.obs)
mean(teststat >= teststat.obs)
Row1 = c(22,40,12); Row2 = c(30,17,11)
Table = rbind(Row1,Row2)
teststat.obs = chisq.test(Table)$statistic
teststat.obs
### create the prefernce data and the gender data
preference = c( rep("B",52), rep("F",57), rep("O",23))
gender = c( rep("boy",74), rep("girl",58) )
table(preference); table(gender)
y = preference; x = gender
teststat = rep(NA, 1000)
for(i in 1:1000) {
### randomly "shuffle" the y data between the x groups
ySHUFFLE = sample(y)
### compute chi-square stat for the shuffled data
TableSHUFFLE = table(x,ySHUFFLE)
teststat[i] = chisq.test(TableSHUFFLE)$statistic
}
### calculate the approximate p-value
mean(teststat >= teststat.obs)
Row1 = c(22,40,12); Row2 = c(30,17,11)
Table = rbind(Row1,Row2)
teststat.obs = chisq.test(Table)$statistic
teststat.obs
### create the prefernce data and the gender data
preference = c( rep("B",52), rep("F",57), rep("O",23))
gender = c( rep("boy",74), rep("girl",58) )
table(preference); table(gender)
y = preference; x = gender
teststat = rep(NA, 1000)
for(i in 1:1000) {
### randomly "shuffle" the y data between the x groups
ySHUFFLE = sample(y)
### compute chi-square stat for the shuffled data
TableSHUFFLE = table(x,ySHUFFLE)
teststat[i] = chisq.test(TableSHUFFLE)$statistic
}
### calculate the approximate p-value
mean(teststat >= teststat.obs)
Row1 = c(22,40,12); Row2 = c(30,17,11)
Table = rbind(Row1,Row2)
teststat.obs = chisq.test(Table)$statistic
teststat.obs
### create the prefernce data and the gender data
preference = c( rep("B",52), rep("F",57), rep("O",23))
gender = c( rep("boy",74), rep("girl",58) )
table(preference); table(gender)
y = preference; x = gender
teststat = rep(NA, 1000)
for(i in 1:1000) {
### randomly "shuffle" the y data between the x groups
ySHUFFLE = sample(y)
### compute chi-square stat for the shuffled data
TableSHUFFLE = table(x,ySHUFFLE)
teststat[i] = chisq.test(TableSHUFFLE)$statistic
}
### calculate the approximate p-value
mean(teststat >= teststat.obs)
Row1 = c(22,40,12); Row2 = c(30,17,11)
Table = rbind(Row1,Row2)
chisq.test(Table)
chisq.test(Table)
teststat.obs
hist(teststat)
mean(teststat >= teststat.obs)
chisq.test(Table)
library(caTools)
choose(5,3)
choose(8,3)
1	  B1, B2, F1      	F2, O1
2	  B1, B2, F2	      F1, O1
3	  B1, B2, Soccer	  F1, F2
4	  B1, F1, F2	      B2, O2
5   B1, F1, Soccer   	B2, F2
6	  B1, F2, Soccer	  B2, F1
7	  B1, F1, F2	      B2, O1
8	  B2, F1, Soccer	  B1, F2
9	  B2, F2, Soccer	  B1, F1
10	F1, F2, Soccer	  B1, B2
11	B1, B2, F1	      F2, O1
12	B1, B2, F2	      F1, O1
13	B1, B2, Swimming	F1, F2
14	B1, F1, F2	      B2, O2
15	B1, F1, Swimming	B2, F2
16	B1, F2, Swimming	B2, F1
17	B1, F1, F2	      B2, O1
18	B2, F1, Swimming	B1, F2
19	B2, F2, Swimming	B1, F1
20	F1, F2, Swimming	B1, B2
21	B1, B2, F1	      F2, O1
22	B1, B2, F2	      F1, O1
23	B1, B2, Track   	F1, F2
24	B1, F1, F2	      B2, O2
25	B1, F1, Track    	B2, F2
26	B1, F2, Track	    B2, F1
27	B1, F1, F2	      B2, O1
28	B2, F1, Track    	B1, F2
29	B2, F2, Track	    B1, F1
30	F1, F2, Track	    B1, B2
samplemeans = rep(NA,1000)
for (i in 1:1000)
{
mysample.i = rnorm(25, 10, 3)
samplemeans[i] = mean(mysample.i)
}
samplemeans
hist(samplemeans)
sum(samplemeans >= 10-2*3/sqrt(25) & samplemeans <= 0+2*3/sqrt(25))/1000
sum(samplemeans >= 10-2*3/sqrt(25) & samplemeans <= 0+2*3/sqrt(25))
x.bar = mean(mysample); s = sd(mysample)
samplemeans = rep(NA,1000)
for (i in 1:1000)
{
mysample.i = rnorm(25, 10, 3)
samplemeans[i] = mean(mysample.i)
}
hist(samplemeans)
sum(samplemeans >= 10-2*3/sqrt(25) & samplemeans <= 0+2*3/sqrt(25))/1000
x.bar = mean(mysample); s = sd(mysample)
mysample(i)
mysample.i = rnorm(25, 10, 3)
x.bar = mean(mysample); s = sd(mysample)
mysample = rnorm(25, 10, 3)
x.bar = mean(mysample); s = sd(mysample)
x.bar - 2*s/sqrt(25); x.bar + 2*s/sqrt(25)
sample1 = mysample
sample.11 = mysample
sample.1
sample.1 = mysample
sample.1
sample.1
```
sample.1
mysample
mean(mysample)
mysample = rnorm(25, 10, 3)
mean(mysample)
mysample = rnorm(25, 10, 3)
mean(mysample)
mysample = rnorm(25, 10, 3)
mean(mysample)
3/sqrt(25)
samplemeans = rep(NA,1000)
for (i in 1:1000)
{
mysample.i = rnorm(25, 10, 3)
samplemeans[i] = mean(mysample.i)
}
hist(samplemeans)
sum(samplemeans >= 10-2*3/sqrt(25) & samplemeans <= 0+2*3/sqrt(25))/1000
x.bar = mean(mysample); s = sd(mysample)
x.bar - 2*s/sqrt(25); x.bar + 2*s/sqrt(25)
mysample
mean(mysample)
bootsample = sample(mysample, 25, replace=T); bootsample
bootmean = mean(bootsample); bootmean
bootmeans = rep(NA, 1000)
for (i in 1:1000)
{
bootsample = sample(mysample, 25, replace=T)
bootmeans[i] = mean(bootsample)
}
hist(bootmeans)
hist(samplemeans)
hist(bootmeans)
samplemeans = rep(NA,1000)
for (i in 1:1000)
{
mysample.i = rnorm(25, 10, 3)
samplemeans[i] = mean(mysample.i)
}
hist(samplemeans)
bootmeans = rep(NA, 1000)
for (i in 1:1000)
{
bootsample = sample(mysample, 25, replace=T)
bootmeans[i] = mean(bootsample)
}
hist(bootmeans)
samplemeans = rep(NA,1000)
for (i in 1:1000)
{
mysample.i = rnorm(25, 10, 3)
samplemeans[i] = mean(mysample.i)
}
hist(samplemeans)
sd(bootmeans)
10-2*sd(bootmeans)
10+2*sd(bootmeans)
setwd("C:/Users/Frank/Desktop/STAT 3480/Lab 9")
read.delim('backpacks.txt')
length(data.2)
data.2 <- read.delim('backpacks.txt')
length(data.2)
dim(data.2)
backpacks <- read.csv("C:/Users/Frank/Desktop/STAT 3480/Lab 9/backpacks.txt", sep="")
View(backpacks)
backpacks <- read.csv("backpacks.txt", sep="")
data.2 <- read.csv("backpacks.txt", sep="")
data.2
attach(data.2)
backpackWT
hist(backpackWT)
bootmeans = rep(NA, 1000)
for (i in 1:1000) {
bootsample = sample(backpackWT, 20, replace=T)
bootmeans[i] = mean(bootsample)
}
sd(bootmeans)
sd(backpageWT)/sqrt(20)
sd(backpackWT)/sqrt(20)
mean(backpackWT)
mean(backpackWT)-2*sd(bootmeans)
mean(backpackWT)+2*sd(bootmeans)
mean(backpackWT)+2*(sd(backpackWT)/sqrt(20))
mean(backpackWT)-2*(sd(backpackWT)/sqrt(20))
mean(backpackWT)+2*(sd(backpackWT)/sqrt(20))
The interval is (9.553677, 16.94632) for the bootstrapped SE.  The CI for the standard error from the formula is (9.461166, 17.03883).
setwd("C:/Users/Frank/Desktop/STAT 5170/Assignment 11")
y<-ts(scan("varve.dat"))
y.t<-log(y, base=10)
ts(y.t)
plot.ts(y.t)
year<-seq(1,455,1)
year.t<-year-mean(year)
year.t2<-year.t^2
result<-lm(y.t~year.t+year.t2)
summary(result)
par(mfrow=c(2,1))
acf(residuals(result))
pacf(residuals(result))
ar1<-arima(residuals(result),c(1,0,0))
ar1
ar1<-arima(residuals(result),c(1,0,0), include.mean=F)
ar1
ar1<-arima(residuals(result),c(1,0,0))
ar1
ar1<-arima(residuals(result),c(1,0,0), include.mean=F)
ar1
y.mat<-cbind(as.ts(y.t), lag(y.t,-1))
year.mat<-cbind(as.ts(year.t), lag(year.t,-1))
year.mat2<-cbind(as.ts(year.t2), lag(year.t2,-1))
y.new<-y.mat[,1] - ar1$coef*y.mat[,2]
year.new<-year.mat[,1] - ar1$coef*year.mat[,2]
year.new2<-year.mat2[,1] - ar1$coef*year.mat2[,2]
result2<-lm(y.new~year.new+year.new2)
summary(result2)
par(mfrow=c(2,1))
acf(residuals(result2))
y<-ts(scan("gas82.dat"))
y
oil <- ts(scan("oil82.dat"))
lm(oil~gas)
gas <- ts(scan("gas82.dat"))
oil <- ts(scan("oil82.dat"))
lm(oil~gas)
summary(lm(oil~gas))
gas <- ts(scan("gas82.dat"))
oil <- ts(scan("oil82.dat"))
result = summary(lm(oil~gas))
par(mfrow=c(2,1))
acf(residuals(result))
pacf(residuals(result))
arima(residuals(result),c(1,0,0))
arima(residuals(result),c(4,0,0))
arima(residuals(result),c(2,0,0))
arima(residuals(result),c(3,0,0))
arima(residuals(result),c(4,0,0))
arima(residuals(result),c(5,0,0))
arima(residuals(result),c(6,0,0))
arima(residuals(result),c(1,0,1))
arima(residuals(result),c(1,0,0))
arima(residuals(result),c(2,0,2))
arima(residuals(result),c(3,0,2))
arima(residuals(result),c(3,0,3))
arima(residuals(result),c(1,1,0))
diff(gas)
result.2 = summary(lm(diff(oil)~diff(gas))
par(mfrow=c(2,1))
result.2 = summary(lm(diff(oil)~diff(gas)))
result.2
result = (lm(oil~gas))
acf(residuals(result))
pacf(residuals(result))
result
result.2
result = summary(lm(oil~gas))
result
result.2
acf(gas)
acf(oil)
result.2 = summary(lm(diff(oil)~(gas)))
result.2
plot(gas)
plot(oil)
plot.ts(oil)
plot.ts(gas)
result.3 = summary(lm(log(oil)~log(gas)))
result.3
acf(residuals(result.3))
pacf(residuals(result.3))
ar1 = arima(residuals(result.3),c(1,0,0))
ar2 = arima(residuals(result.3),c(1,0,0))
ar3 = arima(residuals(result.3),c(1,0,0))
ar4 = arima(residuals(result.3),c(1,0,0))
ar1
ar2
result.log = summary(lm(log(oil)~log(gas)))
ar1 = arima(residuals(result),c(1,0,0))
ar2 = arima(residuals(result),c(2,0,0))
ar3 = arima(residuals(result),c(3,0,0))
ar4 = arima(residuals(result),c(4,0,0))
ar1.diff = arima(residuals(result),c(1,1,0))
ar2.diff = arima(residuals(result),c(2,1,0))
ar3.diff = arima(residuals(result),c(3,1,0))
ar4.diff = arima(residuals(result),c(4,1,0))
ar1.log = arima(residuals(result.log),c(1,0,0))
ar2.log = arima(residuals(result.log),c(2,0,0))
ar3.log = arima(residuals(result.log),c(3,0,0))
ar4.log = arima(residuals(result.log),c(4,0,0))
ar1
ar2
ar3
ar4
ar1.diff
ar2.diff
ar3.diff
ar4.diff
ar1.log
ar2.log
ar3.log
ar4.log
ar1
-1.5917/3.7483
ar2
-1.2551/3.3785
ar1.log
-0.0043/0.0146
ar1.diff
ar2.diff
y.mat<-cbind(as.ts(y.t), lag(y.t,-1))
y<-ts(scan("varve.dat"))
y.t<-log(y, base=10)
year<-seq(1,455,1)
year.t<-year-mean(year)
year.t2<-year.t^2
result<-lm(y.t~year.t+year.t2)
summary(result)
par(mfrow=c(2,1))
acf(residuals(result))
pacf(residuals(result))
ar1<-arima(residuals(result),c(1,0,0))
ar1
ar1<-arima(residuals(result),c(1,0,0), include.mean=F)
ar1
y.mat<-cbind(as.ts(y.t), lag(y.t,-1))
y.mat
y.mat<-cbind(as.ts(y.t), lag(y.t,-1))
year.mat<-cbind(as.ts(year.t), lag(year.t,-1))
year.mat2<-cbind(as.ts(year.t2), lag(year.t2,-1))
y.new<-y.mat[,1] - ar1$coef*y.mat[,2]
y.new
ar1$coef*y.mat[,2]
result.log = summary(lm(log(oil)~log(gas)))
par(mfrow=c(2,1))
acf(residuals(result.log))
pacf(residuals(result.log))
ar1.log = arima(residuals(result.log),c(1,0,0))
ar2.log = arima(residuals(result.log),c(2,0,0))
ar3.log = arima(residuals(result.log),c(3,0,0))
ar4.log = arima(residuals(result.log),c(4,0,0))
```
ar1.log
ar2.log
oil.mat<-cbind(as.ts(log(oil)), lag(oil,-1))
gas.mat<-cbind(as.ts(log(gas)), lag(gas,-1))
oil.new <-oil.mat[,1] - ar1.log$coef*oil.mat[,2]
oil.new <-oil.mat[,1] - ar1.log$coef
ar1.log$coef
oil.mat[,1]
oil.mat[,2]
oil.new <-oil.mat[,1] - ar1.log$coef*oil.mat[,2]
gas.new<- gas.mat[,1] - ar1.log$coef*gas.mat[,2]
plot(oil.new)
plot(gas.new)
plot.ts(oil.new)
lm(oil.new~gas.new)
summary(lm(oil.new~gas.new))
ar2.log
result.2 = summary(oil.new~gas.new)
acf(residuals(result.2))
pacf(residuals(result.2))
result.2
result.2 = summary(lm(oil.new~gas.new))
acf(residuals(result.2))
pacf(residuals(result.2))
result.2 = summary(lm(oil.new~gas.new))
par(mfrow=c(2,1))
acf(residuals(result.2))
pacf(residuals(result.2))
acf(residuals(result.2), main="test")
par(mfrow=c(2,1))
acf(residuals(result.log))
pacf(residuals(result.log))
par(mfrow=c(2,1))
acf(residuals(result.log), main="ACF of non-transformed regression")
pacf(residuals(result.log), main="ACF of non-transformed regression")
acf(residuals(result.2), main="ACF of transformed regression")
pacf(residuals(result.2), main="PACF of transformed regression")
ar1.2 = arima(residuals(result.2),c(1,0,0))
ar1.2
-0.0025/0.7894
-0.0679/0.1102
-0.0679/0.1102
ar1.2 = arima(residuals(result.2),c(2,0,0))
ar1.2
-0.0088/ 0.0785
0.7488/0.0897
1.1195/2.3253
ar2.2
ar2.2 = arima(residuals(result.2),c(2,0,0))
ar2.2
0.0088/0.0785
